// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                String             @id @default(cuid())
  firstName         String
  lastName          String
  email             String             @unique
  createdAt         DateTime           @default(now())
  profilePicURL     String?
  reviews           Review[]
  shippingAddresses ShippingAddress[]
  shoppingCartItem  ShoppingCartItem[]
}

model ShippingAddress {
  id          String   @id @default(cuid())
  firstName   String
  lastName    String
  country     String
  state       String
  city        String
  address     String
  zip         String
  phoneNumber Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Product {
  id                String             @id @default(cuid())
  name              String
  price             Float
  stock             Int
  description       String
  categories        Category[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  imageURL          String?
  averageRating     Float              @default(0)
  vendor            Vendor             @relation(fields: [vendorId], references: [id])
  vendorId          String
  reviews           Review[]
  shoppingCartItems ShoppingCartItem[]
}

model ShoppingCartItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  user      User    @relation(fields: [userId], references: [id])
  userId    String
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  products    Product[]
}

model Vendor {
  id          String    @id @default(cuid())
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  imgURL      String?
  product     Product[]
}

model Review {
  id          String   @id @default(cuid())
  title       String
  rating      Int
  body        String
  upvoteCount Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reviewedBy  User     @relation(fields: [userId], references: [id])
  userId      String
  reviewed    Product  @relation(fields: [productId], references: [id])
  productId   String
}
